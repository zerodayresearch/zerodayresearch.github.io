---
import { getCollection } from 'astro:content';

interface Props {
  currentSlug?: string;
}

const { currentSlug } = Astro.props;

// Get all advisories
const advisories = await getCollection('advisories');

// Sort by publish date, newest first
const sortedAdvisories = advisories.sort((a, b) => {
  return new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime();
});
---

<div class="bg-cyberdark-800 rounded-lg p-5 sticky top-4">
  <h2 class="text-xl font-display text-white mb-4 flex items-center">
    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-2 text-cyberblue-500"><path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path><polyline points="14 2 14 8 20 8"></polyline><line x1="16" y1="13" x2="8" y2="13"></line><line x1="16" y1="17" x2="8" y2="17"></line><polyline points="10 9 9 9 8 9"></polyline></svg>
    Recent Advisories
  </h2>
  
  <ul class="space-y-3">
    {sortedAdvisories.slice(0, 10).map((advisory) => (
      <li>
        <a 
          href={`/advisory/${advisory.slug}`}
          class={`block py-2 px-3 rounded hover:bg-cyberdark-700 transition-colors ${currentSlug === advisory.slug ? 'bg-cyberdark-700 border-l-2 border-cyberblue-500 pl-2' : ''}`}
        >
          <h3 class="text-sm font-medium text-white">{advisory.data.title}</h3>
          <div class="text-xs text-gray-400 flex items-center mt-1">
            {advisory.data.cveId && (
              <span class="mr-3">{advisory.data.cveId}</span>
            )}
            <span>{new Date(advisory.data.publishDate).toLocaleDateString()}</span>
          </div>
        </a>
      </li>
    ))}
  </ul>
  
  {sortedAdvisories.length > 10 && (
    <div class="mt-4 text-center">
      <a href="/advisories" class="text-cyberblue-400 hover:text-cyberblue-300 text-sm">
        View All Advisories â†’
      </a>
    </div>
  )}
</div>